---
# tasks file for openvpn
- name: Install EPEL
  yum: name=epel-release state=present

- name: Install packages
  yum: name={{item}}  state=present
  with_items:
  - openvpn 
  - easy-rsa
#--------------------------------------------
#  Easy RSA
#--------------------------------------------
- name: Make a easy-rsa folder in openvpn
  file: /etc/openvpn/easy-rsa

- name: Make a easy-rsa folder in openvpn
  file: /etc/openvpn/easy-rsa/keys

- name: Copy over easy-rsa files
  copy: 
    src: {{ item }}
    dest: /etc/openvpn/easy-rsa/
    owner: root
    mode: 600
  with_fileglob:
    - /usr/share/easy-rsa/2.0/* 

- name: Template easy-rsa vars file
  template: dest=/etc/openvpn/easy-rsa/vars src=vars.j2

- name: Copy openssl.conf
  copy: dest=/etc/openvpn/easy-rsa/openssl.cnf src=openssl.cnf

- name: Create server keys
  shell: source ./vars && ./clean-all && ./build-ca chdir=/etc/openvpn/easy-rsa/keys


#--------------------------------------------



- name: Copy server configuration
  template: src=server.conf.j2 dest=/etc/openvpn/server.conf
            owner=root mode=0640
  notify: restart openvpn

- name: Copy server's certificates
  template: src={{ item }}.j2 dest=/etc/openvpn/{{ item }} owner=root mode=0600
  with_items:
    - ca.crt
    - server.key
    - server.crt
    - dh2048.pem
  notify: restart openvpn

- name: Start Firewalld
  service: name=firewalld enabled=true state=started

- name: Configure firewall ports
  firewalld: service=openvpn permanent=yes immediate=yes state=enabled

- name: Check firewall routing status
  command: firewall-cmd --list-all
  register: masquerade_status
  changed_when: "'masquerade: no' in masquerade_status.stdout"

- name: Activate firewall routing
  command: firewall-cmd --add-masquerade
  when: "'masquerade: no' in masquerade_status.stdout"

- name: Enable firewall routing
  command: firewall-cmd --permanent --add-masquerade
  when: "'masquerade: no' in masquerade_status.stdout"

- name: Enable ip_forward
  lineinfile: dest=/etc/sysctl.conf regexp="^net.ipv4.ip_forward"
              state=present line="net.ipv4.ip_forward = 1" create=yes
  notify: restart network

- name: Enable and start openvpn
  service: name=openvpn@{{ openvpn_server_name }} state=started enabled=yes
